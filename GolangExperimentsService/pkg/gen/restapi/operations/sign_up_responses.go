// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/COMP3004/UserAccounts/pkg/gen/models"
)

// SignUpCreatedCode is the HTTP code returned for type SignUpCreated
const SignUpCreatedCode int = 201

/*SignUpCreated OK

swagger:response signUpCreated
*/
type SignUpCreated struct {

	/*
	  In: Body
	*/
	Payload *models.PostOkResponse `json:"body,omitempty"`
}

// NewSignUpCreated creates SignUpCreated with default headers values
func NewSignUpCreated() *SignUpCreated {

	return &SignUpCreated{}
}

// WithPayload adds the payload to the sign up created response
func (o *SignUpCreated) WithPayload(payload *models.PostOkResponse) *SignUpCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign up created response
func (o *SignUpCreated) SetPayload(payload *models.PostOkResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignUpCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignUpUnauthorizedCode is the HTTP code returned for type SignUpUnauthorized
const SignUpUnauthorizedCode int = 401

/*SignUpUnauthorized insufficient permissions/not allowed

swagger:response signUpUnauthorized
*/
type SignUpUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.NotAllowedResponse `json:"body,omitempty"`
}

// NewSignUpUnauthorized creates SignUpUnauthorized with default headers values
func NewSignUpUnauthorized() *SignUpUnauthorized {

	return &SignUpUnauthorized{}
}

// WithPayload adds the payload to the sign up unauthorized response
func (o *SignUpUnauthorized) WithPayload(payload *models.NotAllowedResponse) *SignUpUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign up unauthorized response
func (o *SignUpUnauthorized) SetPayload(payload *models.NotAllowedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignUpUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignUpConflictCode is the HTTP code returned for type SignUpConflict
const SignUpConflictCode int = 409

/*SignUpConflict Already exists

swagger:response signUpConflict
*/
type SignUpConflict struct {

	/*
	  In: Body
	*/
	Payload *models.AlreadyExistsResponse `json:"body,omitempty"`
}

// NewSignUpConflict creates SignUpConflict with default headers values
func NewSignUpConflict() *SignUpConflict {

	return &SignUpConflict{}
}

// WithPayload adds the payload to the sign up conflict response
func (o *SignUpConflict) WithPayload(payload *models.AlreadyExistsResponse) *SignUpConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign up conflict response
func (o *SignUpConflict) SetPayload(payload *models.AlreadyExistsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignUpConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignUpInternalServerErrorCode is the HTTP code returned for type SignUpInternalServerError
const SignUpInternalServerErrorCode int = 500

/*SignUpInternalServerError Internal error

swagger:response signUpInternalServerError
*/
type SignUpInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSignUpInternalServerError creates SignUpInternalServerError with default headers values
func NewSignUpInternalServerError() *SignUpInternalServerError {

	return &SignUpInternalServerError{}
}

// WithPayload adds the payload to the sign up internal server error response
func (o *SignUpInternalServerError) WithPayload(payload *models.ErrorResponse) *SignUpInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign up internal server error response
func (o *SignUpInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignUpInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
