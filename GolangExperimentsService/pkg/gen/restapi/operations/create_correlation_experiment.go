// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateCorrelationExperimentHandlerFunc turns a function with the right signature into a create correlation experiment handler
type CreateCorrelationExperimentHandlerFunc func(CreateCorrelationExperimentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateCorrelationExperimentHandlerFunc) Handle(params CreateCorrelationExperimentParams) middleware.Responder {
	return fn(params)
}

// CreateCorrelationExperimentHandler interface for that can handle valid create correlation experiment params
type CreateCorrelationExperimentHandler interface {
	Handle(CreateCorrelationExperimentParams) middleware.Responder
}

// NewCreateCorrelationExperiment creates a new http.Handler for the create correlation experiment operation
func NewCreateCorrelationExperiment(ctx *middleware.Context, handler CreateCorrelationExperimentHandler) *CreateCorrelationExperiment {
	return &CreateCorrelationExperiment{Context: ctx, Handler: handler}
}

/*CreateCorrelationExperiment swagger:route POST /v1/experiments/correlation createCorrelationExperiment

Add a new experiment to a users account

*/
type CreateCorrelationExperiment struct {
	Context *middleware.Context
	Handler CreateCorrelationExperimentHandler
}

func (o *CreateCorrelationExperiment) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateCorrelationExperimentParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
