// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewCorrelationExperiment new correlation experiment
// swagger:model newCorrelationExperiment
type NewCorrelationExperiment struct {

	// asset 1
	// Required: true
	Asset1 *string `json:"asset_1"`

	// asset 2
	// Required: true
	Asset2 *string `json:"asset_2"`

	// asset combo
	// Required: true
	// Enum: [equity_currency equity_equity]
	AssetCombo *string `json:"asset_combo"`
}

// Validate validates this new correlation experiment
func (m *NewCorrelationExperiment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAsset1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAsset2(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAssetCombo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewCorrelationExperiment) validateAsset1(formats strfmt.Registry) error {

	if err := validate.Required("asset_1", "body", m.Asset1); err != nil {
		return err
	}

	return nil
}

func (m *NewCorrelationExperiment) validateAsset2(formats strfmt.Registry) error {

	if err := validate.Required("asset_2", "body", m.Asset2); err != nil {
		return err
	}

	return nil
}

var newCorrelationExperimentTypeAssetComboPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["equity_currency","equity_equity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		newCorrelationExperimentTypeAssetComboPropEnum = append(newCorrelationExperimentTypeAssetComboPropEnum, v)
	}
}

const (

	// NewCorrelationExperimentAssetComboEquityCurrency captures enum value "equity_currency"
	NewCorrelationExperimentAssetComboEquityCurrency string = "equity_currency"

	// NewCorrelationExperimentAssetComboEquityEquity captures enum value "equity_equity"
	NewCorrelationExperimentAssetComboEquityEquity string = "equity_equity"
)

// prop value enum
func (m *NewCorrelationExperiment) validateAssetComboEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, newCorrelationExperimentTypeAssetComboPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NewCorrelationExperiment) validateAssetCombo(formats strfmt.Registry) error {

	if err := validate.Required("asset_combo", "body", m.AssetCombo); err != nil {
		return err
	}

	// value enum
	if err := m.validateAssetComboEnum("asset_combo", "body", *m.AssetCombo); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewCorrelationExperiment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewCorrelationExperiment) UnmarshalBinary(b []byte) error {
	var res NewCorrelationExperiment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
