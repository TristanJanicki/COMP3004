// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExistingThresholdExperiment existing threshold experiment
// swagger:model existingThresholdExperiment
type ExistingThresholdExperiment struct {

	// directional bias
	// Enum: [crosses_above crosses_below]
	DirectionalBias string `json:"directional_bias,omitempty"`

	// event dates
	EventDates []string `json:"event_dates"`

	// experiment id
	ExperimentID string `json:"experiment_id,omitempty"`

	// indicator
	Indicator string `json:"indicator,omitempty"`

	// price delta mean
	PriceDeltaMean float64 `json:"price_delta_mean,omitempty"`

	// price delta std dev
	PriceDeltaStdDev float64 `json:"price_delta_std_dev,omitempty"`

	// price deltas
	PriceDeltas []float64 `json:"price_deltas"`

	// shapiro p
	Shapirop float64 `json:"shapiro_p,omitempty"`

	// shapiro w
	Shapirow float64 `json:"shapiro_w,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// t test p
	TTestp float64 `json:"t_test_p,omitempty"`

	// t test t
	TTestt float64 `json:"t_test_t,omitempty"`

	// threshold
	Threshold int64 `json:"threshold,omitempty"`

	// ticker
	Ticker string `json:"ticker,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// volumes
	Volumes []int64 `json:"volumes"`

	// volumes mean
	VolumesMean float64 `json:"volumes_mean,omitempty"`
}

// Validate validates this existing threshold experiment
func (m *ExistingThresholdExperiment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectionalBias(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var existingThresholdExperimentTypeDirectionalBiasPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["crosses_above","crosses_below"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		existingThresholdExperimentTypeDirectionalBiasPropEnum = append(existingThresholdExperimentTypeDirectionalBiasPropEnum, v)
	}
}

const (

	// ExistingThresholdExperimentDirectionalBiasCrossesAbove captures enum value "crosses_above"
	ExistingThresholdExperimentDirectionalBiasCrossesAbove string = "crosses_above"

	// ExistingThresholdExperimentDirectionalBiasCrossesBelow captures enum value "crosses_below"
	ExistingThresholdExperimentDirectionalBiasCrossesBelow string = "crosses_below"
)

// prop value enum
func (m *ExistingThresholdExperiment) validateDirectionalBiasEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, existingThresholdExperimentTypeDirectionalBiasPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExistingThresholdExperiment) validateDirectionalBias(formats strfmt.Registry) error {

	if swag.IsZero(m.DirectionalBias) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionalBiasEnum("directional_bias", "body", m.DirectionalBias); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExistingThresholdExperiment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExistingThresholdExperiment) UnmarshalBinary(b []byte) error {
	var res ExistingThresholdExperiment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
