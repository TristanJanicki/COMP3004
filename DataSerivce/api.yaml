consumes:
  - application/json
info:
  description: A microservice for managing AWS cognito user accounts
  title: User Accounts Service
  version: 0.1.0
produces:
  - application/json
schemes:
  - http
swagger: "2.0"

definitions:

  getDataResponse:
    type: object
    properties:
      required:
        - s3Url
      s3Url:
        type: string

  ## Error response
  errorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Internal error"

  ## Not found response
  notFoundResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Not found"

  ## Not allowed response
  notAllowedResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Not allowed"

  ## Already exists response
  alreadyExistsResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Entity already exists"

  ## Bad input response
  badInputResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Bad input"

  ## OK response
  okResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "OK"

  ## OK response
  postOkResponse:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        maxLength: 36

paths:
  /v1/data/{dataType}:
    get:
      description: "Get the data associated with the attributes in the query"
      operationId: "GetData"
      parameters:
        - in: "path"
          name: "dataType"
          type: string
          required: true
          enum: ["technical", "prices"]
        - in: "query"
          name: "ticker"
          type: string
          required: true
        - in: "query"
          name: "technical"
          type: string
        - in: "query"
          name: "seriesType"
          type: string
        - in: "query"
          name: "timerPeriod"
          type: string
        - in: "query"
          name: "timeInterval"
          type: string
        - in: "query"
          name: "TimeSeriesType"
          type: string
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        401:
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        500:
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
