// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/COMP3004/UserAccounts/pkg/gen/models"
)

// CompletePasswordRecoveryCreatedCode is the HTTP code returned for type CompletePasswordRecoveryCreated
const CompletePasswordRecoveryCreatedCode int = 201

/*CompletePasswordRecoveryCreated OK

swagger:response completePasswordRecoveryCreated
*/
type CompletePasswordRecoveryCreated struct {

	/*
	  In: Body
	*/
	Payload *models.OkResponse `json:"body,omitempty"`
}

// NewCompletePasswordRecoveryCreated creates CompletePasswordRecoveryCreated with default headers values
func NewCompletePasswordRecoveryCreated() *CompletePasswordRecoveryCreated {

	return &CompletePasswordRecoveryCreated{}
}

// WithPayload adds the payload to the complete password recovery created response
func (o *CompletePasswordRecoveryCreated) WithPayload(payload *models.OkResponse) *CompletePasswordRecoveryCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the complete password recovery created response
func (o *CompletePasswordRecoveryCreated) SetPayload(payload *models.OkResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CompletePasswordRecoveryCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CompletePasswordRecoveryNotFoundCode is the HTTP code returned for type CompletePasswordRecoveryNotFound
const CompletePasswordRecoveryNotFoundCode int = 404

/*CompletePasswordRecoveryNotFound Not found

swagger:response completePasswordRecoveryNotFound
*/
type CompletePasswordRecoveryNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewCompletePasswordRecoveryNotFound creates CompletePasswordRecoveryNotFound with default headers values
func NewCompletePasswordRecoveryNotFound() *CompletePasswordRecoveryNotFound {

	return &CompletePasswordRecoveryNotFound{}
}

// WithPayload adds the payload to the complete password recovery not found response
func (o *CompletePasswordRecoveryNotFound) WithPayload(payload *models.NotFoundResponse) *CompletePasswordRecoveryNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the complete password recovery not found response
func (o *CompletePasswordRecoveryNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CompletePasswordRecoveryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CompletePasswordRecoveryInternalServerErrorCode is the HTTP code returned for type CompletePasswordRecoveryInternalServerError
const CompletePasswordRecoveryInternalServerErrorCode int = 500

/*CompletePasswordRecoveryInternalServerError Internal error

swagger:response completePasswordRecoveryInternalServerError
*/
type CompletePasswordRecoveryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCompletePasswordRecoveryInternalServerError creates CompletePasswordRecoveryInternalServerError with default headers values
func NewCompletePasswordRecoveryInternalServerError() *CompletePasswordRecoveryInternalServerError {

	return &CompletePasswordRecoveryInternalServerError{}
}

// WithPayload adds the payload to the complete password recovery internal server error response
func (o *CompletePasswordRecoveryInternalServerError) WithPayload(payload *models.ErrorResponse) *CompletePasswordRecoveryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the complete password recovery internal server error response
func (o *CompletePasswordRecoveryInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CompletePasswordRecoveryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
