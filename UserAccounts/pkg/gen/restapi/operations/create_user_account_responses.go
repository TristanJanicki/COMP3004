// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/COMP3004/UserAccounts/pkg/gen/models"
)

// CreateUserAccountCreatedCode is the HTTP code returned for type CreateUserAccountCreated
const CreateUserAccountCreatedCode int = 201

/*CreateUserAccountCreated OK

swagger:response createUserAccountCreated
*/
type CreateUserAccountCreated struct {

	/*
	  In: Body
	*/
	Payload *models.PostOkResponse `json:"body,omitempty"`
}

// NewCreateUserAccountCreated creates CreateUserAccountCreated with default headers values
func NewCreateUserAccountCreated() *CreateUserAccountCreated {

	return &CreateUserAccountCreated{}
}

// WithPayload adds the payload to the create user account created response
func (o *CreateUserAccountCreated) WithPayload(payload *models.PostOkResponse) *CreateUserAccountCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user account created response
func (o *CreateUserAccountCreated) SetPayload(payload *models.PostOkResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserAccountCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserAccountBadRequestCode is the HTTP code returned for type CreateUserAccountBadRequest
const CreateUserAccountBadRequestCode int = 400

/*CreateUserAccountBadRequest Bad request

swagger:response createUserAccountBadRequest
*/
type CreateUserAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadInputResponse `json:"body,omitempty"`
}

// NewCreateUserAccountBadRequest creates CreateUserAccountBadRequest with default headers values
func NewCreateUserAccountBadRequest() *CreateUserAccountBadRequest {

	return &CreateUserAccountBadRequest{}
}

// WithPayload adds the payload to the create user account bad request response
func (o *CreateUserAccountBadRequest) WithPayload(payload *models.BadInputResponse) *CreateUserAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user account bad request response
func (o *CreateUserAccountBadRequest) SetPayload(payload *models.BadInputResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserAccountUnauthorizedCode is the HTTP code returned for type CreateUserAccountUnauthorized
const CreateUserAccountUnauthorizedCode int = 401

/*CreateUserAccountUnauthorized insufficient permissions/not allowed

swagger:response createUserAccountUnauthorized
*/
type CreateUserAccountUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.NotAllowedResponse `json:"body,omitempty"`
}

// NewCreateUserAccountUnauthorized creates CreateUserAccountUnauthorized with default headers values
func NewCreateUserAccountUnauthorized() *CreateUserAccountUnauthorized {

	return &CreateUserAccountUnauthorized{}
}

// WithPayload adds the payload to the create user account unauthorized response
func (o *CreateUserAccountUnauthorized) WithPayload(payload *models.NotAllowedResponse) *CreateUserAccountUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user account unauthorized response
func (o *CreateUserAccountUnauthorized) SetPayload(payload *models.NotAllowedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserAccountUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserAccountConflictCode is the HTTP code returned for type CreateUserAccountConflict
const CreateUserAccountConflictCode int = 409

/*CreateUserAccountConflict Already exists

swagger:response createUserAccountConflict
*/
type CreateUserAccountConflict struct {

	/*
	  In: Body
	*/
	Payload *models.AlreadyExistsResponse `json:"body,omitempty"`
}

// NewCreateUserAccountConflict creates CreateUserAccountConflict with default headers values
func NewCreateUserAccountConflict() *CreateUserAccountConflict {

	return &CreateUserAccountConflict{}
}

// WithPayload adds the payload to the create user account conflict response
func (o *CreateUserAccountConflict) WithPayload(payload *models.AlreadyExistsResponse) *CreateUserAccountConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user account conflict response
func (o *CreateUserAccountConflict) SetPayload(payload *models.AlreadyExistsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserAccountConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserAccountInternalServerErrorCode is the HTTP code returned for type CreateUserAccountInternalServerError
const CreateUserAccountInternalServerErrorCode int = 500

/*CreateUserAccountInternalServerError Internal error

swagger:response createUserAccountInternalServerError
*/
type CreateUserAccountInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserAccountInternalServerError creates CreateUserAccountInternalServerError with default headers values
func NewCreateUserAccountInternalServerError() *CreateUserAccountInternalServerError {

	return &CreateUserAccountInternalServerError{}
}

// WithPayload adds the payload to the create user account internal server error response
func (o *CreateUserAccountInternalServerError) WithPayload(payload *models.ErrorResponse) *CreateUserAccountInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user account internal server error response
func (o *CreateUserAccountInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserAccountInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
