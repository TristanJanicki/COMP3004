// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/COMP3004/UserAccounts/pkg/gen/models"
)

// ChangePasswordOKCode is the HTTP code returned for type ChangePasswordOK
const ChangePasswordOKCode int = 200

/*ChangePasswordOK OK

swagger:response changePasswordOK
*/
type ChangePasswordOK struct {

	/*
	  In: Body
	*/
	Payload *models.OkResponse `json:"body,omitempty"`
}

// NewChangePasswordOK creates ChangePasswordOK with default headers values
func NewChangePasswordOK() *ChangePasswordOK {

	return &ChangePasswordOK{}
}

// WithPayload adds the payload to the change password o k response
func (o *ChangePasswordOK) WithPayload(payload *models.OkResponse) *ChangePasswordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the change password o k response
func (o *ChangePasswordOK) SetPayload(payload *models.OkResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChangePasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChangePasswordUnauthorizedCode is the HTTP code returned for type ChangePasswordUnauthorized
const ChangePasswordUnauthorizedCode int = 401

/*ChangePasswordUnauthorized Not allowed

swagger:response changePasswordUnauthorized
*/
type ChangePasswordUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.NotAllowedResponse `json:"body,omitempty"`
}

// NewChangePasswordUnauthorized creates ChangePasswordUnauthorized with default headers values
func NewChangePasswordUnauthorized() *ChangePasswordUnauthorized {

	return &ChangePasswordUnauthorized{}
}

// WithPayload adds the payload to the change password unauthorized response
func (o *ChangePasswordUnauthorized) WithPayload(payload *models.NotAllowedResponse) *ChangePasswordUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the change password unauthorized response
func (o *ChangePasswordUnauthorized) SetPayload(payload *models.NotAllowedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChangePasswordUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChangePasswordNotFoundCode is the HTTP code returned for type ChangePasswordNotFound
const ChangePasswordNotFoundCode int = 404

/*ChangePasswordNotFound Not found

swagger:response changePasswordNotFound
*/
type ChangePasswordNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewChangePasswordNotFound creates ChangePasswordNotFound with default headers values
func NewChangePasswordNotFound() *ChangePasswordNotFound {

	return &ChangePasswordNotFound{}
}

// WithPayload adds the payload to the change password not found response
func (o *ChangePasswordNotFound) WithPayload(payload *models.NotFoundResponse) *ChangePasswordNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the change password not found response
func (o *ChangePasswordNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChangePasswordNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChangePasswordInternalServerErrorCode is the HTTP code returned for type ChangePasswordInternalServerError
const ChangePasswordInternalServerErrorCode int = 500

/*ChangePasswordInternalServerError Internal error

swagger:response changePasswordInternalServerError
*/
type ChangePasswordInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewChangePasswordInternalServerError creates ChangePasswordInternalServerError with default headers values
func NewChangePasswordInternalServerError() *ChangePasswordInternalServerError {

	return &ChangePasswordInternalServerError{}
}

// WithPayload adds the payload to the change password internal server error response
func (o *ChangePasswordInternalServerError) WithPayload(payload *models.ErrorResponse) *ChangePasswordInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the change password internal server error response
func (o *ChangePasswordInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChangePasswordInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
