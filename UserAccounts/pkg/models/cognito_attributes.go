package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strings"

	genModels "github.com/COMP3004/UserAccounts/pkg/gen/models"

	"github.com/aws/aws-sdk-go/service/cognitoidentityprovider"
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CognitoAttributes is used for Unmarshalling the ID Token of a user's account and access the attributes. This object is the aws cognito representation of a user account
// swagger:model cognitoAttributes
type CognitoAttributes struct {

	// aud
	Aud string `json:"aud,omitempty"`

	// company
	Company string `json:"company,omitempty"`

	// customer id
	CustomerID string `json:"customer_id,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// event id
	EventID string `json:"event_id,omitempty"`

	// exp
	Exp int64 `json:"exp,omitempty"`

	// groups
	// Max Length: 4
	Groups []string `json:"groups"`

	// iat
	Iat int64 `json:"iat,omitempty"`

	// iss
	Iss string `json:"iss,omitempty"`

	// locale
	Locale string `json:"locale,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// preferred role
	PreferredRole string `json:"preferred_role,omitempty"`

	// roles
	Roles []string `json:"roles"`

	// sub
	Sub string `json:"sub,omitempty"`

	// token use
	TokenUse string `json:"token_use,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this cognito attributes
func (m *CognitoAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroups(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CognitoAttributes) validateGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.Groups) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CognitoAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CognitoAttributes) UnmarshalBinary(b []byte) error {
	var res CognitoAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

func emailToPointer(email strfmt.Email) *strfmt.Email {
	return &email
}

func CognitoSearchUserResultsToSwaggerModel(user *cognitoidentityprovider.UserType) (*string, *genModels.UserProfile) {
	userProfile := &genModels.UserProfile{}

	userProfile.Email = emailToPointer(strfmt.Email(*user.Username))
	var id *string

	for i := range user.Attributes {
		switch *user.Attributes[i].Name {
		case "Email":
			userProfile.Email = emailToPointer(strfmt.Email(*user.Attributes[i].Value))
			break
		case "name":
			userProfile.Name = user.Attributes[i].Value
			break
		case "nickname":
			userProfile.NickName = *user.Attributes[i].Value
			break
		case "phone number":
			phone := &genModels.PhoneNumber{}
			phoneParts := strings.Split(*user.Attributes[i].Value, " ")
			phone.Code = &phoneParts[0]
			phone.Number = &phoneParts[1]
			userProfile.Phone = phone
			break
		case "title":
			userProfile.Title = *user.Attributes[i].Value
			break
		case "sub":
			id = user.Attributes[i].Value
		}
	}

	return id, userProfile

}
