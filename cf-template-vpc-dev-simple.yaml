#VPC Main: CF startup commands
#aws cloudformation describe-stacks
#aws cloudformation delete-stack --stack-name vpc-main
#aws cloudformation create-stack --stack-name vpc-main --template-body file://vpc-cf-template-dev.yaml

AWSTemplateFormatVersion: 2010-09-09
Description: "Provides networking configuration for a standard, public facing application, separates private-public subnets and enforces traffic with NACL rules"
Parameters:
  EnvironmentType:
    Type: String
    Default: dev
    AllowedValues:
      - dev
Mappings:
  Env:
    dev:
      VPCCIDR: "10.105.0.0/16"
      PublicSubnetA: "10.105.0.0/22"
      PrivateSubnetA: "10.105.48.0/20"
      DomainName: "stock-advisor-dev.io"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap [ Env, !Ref EnvironmentType, VPCCIDR ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ["-", ["vpc", !Ref EnvironmentType]]
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneTags:
        - Key: Name
          Value: !Join ["-", ["hosted-zone", !Ref EnvironmentType]]
        - Key: environment
          Value: !Ref EnvironmentType
        - Key: owner
          Value: "infrastructure"
        - Key: cost-group
          Value: "infrastructure"
      Name: !FindInMap [Env, !Ref EnvironmentType, DomainName]
      VPCs:
        -
          VPCId: !Ref VPC
          VPCRegion: !Ref AWS::Region
  DHCPOptions:
    Type: "AWS::EC2::DHCPOptions"
    Properties:
      DomainName: !Join [" ", ["ec2.internal", !FindInMap [Env, !Ref EnvironmentType, DomainName]]]
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Join ["-", ["dhcp-options", !Ref EnvironmentType]]
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [Env, !Ref EnvironmentType, PublicSubnetA]
      Tags:
        - Key: Name
          Value: subnet-public-a
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [Env, !Ref EnvironmentType, PrivateSubnetA]
      Tags:
      - Key: Name
        Value: subnet-private-a
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: routetable-public
  NATGatewayA:
    DependsOn: InternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPNATA.AllocationId
      SubnetId: !Ref PublicSubnetA
  EIPNATA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  RouteProdIGW:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
        RouteTableId: !Ref RouteTablePublic
        GatewayId: !Ref InternetGateway
        DestinationCidrBlock: 0.0.0.0/0
  RoutePrivateNATGatewayA:
    Type: AWS::EC2::Route
    Properties:
        DestinationCidrBlock: 0.0.0.0/0
        RouteTableId: !Ref RouteTablePrivateA
        NatGatewayId: !Ref NATGatewayA
  RouteTablePrivateA:
    Type: AWS::EC2::RouteTable
    Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: routetable-private-a
  RouteTableAssocPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTablePublic
        SubnetId: !Ref PublicSubnetA
  PrivateSubnetAssocA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTablePrivateA
        SubnetId: !Ref PrivateSubnetA
  NACLPublic:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: nacl-public
  NACLPrivate:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: nacl-private
  NACLRuleAllowAll10NetInternal:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 10.0.0.0/8
        Protocol: -1
        RuleAction: allow
        RuleNumber: 110
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowRackSpaceInternal:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 172.20.0.0/22
        Protocol: -1
        RuleAction: allow
        RuleNumber: 115
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowBastionSSHAccessPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 172.31.0.0/16
        Protocol: 6
        PortRange:
            From: 22
            To: 22
        RuleAction: allow
        RuleNumber: 135
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowReturnTCPPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 6
        PortRange:
            From: 1024
            To: 65535
        RuleAction: allow
        RuleNumber: 140
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowNTPPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 17
        PortRange:
            From: 123
            To: 123
        RuleAction: allow
        RuleNumber: 150
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowNTPEphemeralPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 17
        PortRange:
            From: 1024
            To: 65535
        RuleAction: allow
        RuleNumber: 155
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowAllEgressPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Egress: true
        Protocol: -1
        RuleAction: allow
        RuleNumber: 105
        NetworkAclId: !Ref NACLPrivate
  NACLRuleAllowAllReturnTCP:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
          CidrBlock: 0.0.0.0/0
          Protocol: 6
          PortRange:
              From: 1024
              To: 65535
          RuleAction: allow
          RuleNumber: 140
          NetworkAclId: !Ref NACLPublic
  NACLRuleAllowAllFromInternal:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
          CidrBlock: 10.0.0.0/8
          Protocol: -1
          RuleAction: allow
          RuleNumber: 155
          NetworkAclId: !Ref NACLPublic
  NACLRuleAllowNTPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 17
        PortRange:
            From: 123
            To: 123
        RuleAction: allow
        RuleNumber: 170
        NetworkAclId: !Ref NACLPublic
  NACLRuleAllowNTPEphemeralPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 17
        PortRange:
            From: 1024
            To: 65535
        RuleAction: allow
        RuleNumber: 175
        NetworkAclId: !Ref NACLPublic
  NACLRuleAllowBastionSSHAccessPublic:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
          CidrBlock: 172.31.0.0/16
          Protocol: 6
          PortRange:
              From: 22
              To: 22
          RuleAction: allow
          RuleNumber: 205
          NetworkAclId: !Ref NACLPublic
  NACLRuleAllowAllEgress:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Egress: true
        Protocol: -1
        RuleAction: allow
        RuleNumber: 105
        NetworkAclId: !Ref NACLPublic
  NACLRuleAllowHTTPSPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 6
        PortRange:
            From: 443
            To: 443
        RuleAction: allow
        RuleNumber: 100
        NetworkAclId: !Ref NACLPublic
  NACLRuleAllowHTTPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: 6
        PortRange:
            From: 80
            To: 80
        RuleAction: allow
        RuleNumber: 105
        NetworkAclId: !Ref NACLPublic
  NACLAssocPrivateSubnetA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
        NetworkAclId: !Ref NACLPrivate
        SubnetId: !Ref PrivateSubnetA
  NACLAssocPublicSubnetA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
        NetworkAclId: !Ref NACLPublic
        SubnetId: !Ref PublicSubnetA
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref RouteTablePublic
        - !Ref RouteTablePrivateA
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPC
  DynamodbEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref RouteTablePublic
        - !Ref RouteTablePrivateA
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .dynamodb
      VpcId: !Ref VPC
Outputs:
    VPC:
        Value: !Ref VPC
    PublicSubnetA:
        Value: !Ref PublicSubnetA
    PrivateSubnetA:
        Value: !Ref PrivateSubnetA
    RouteTablePublic:
        Value: !Ref RouteTablePublic