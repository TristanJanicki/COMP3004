consumes:
  - application/json
info:
  description: A microservice for managing a users experiments
  title: Experiments Service
  version: 0.1.0
produces:
  - application/json
schemes:
  - http
swagger: "2.0"

definitions:
  newCorrelationPost:
    required:
      - experiment
    properties:
      experiment:
        type: object
        schema:
          $ref: "#/definitions/newCorrelationExperiment"

  newThresholdPost:
    required:
      - experiment
    properties:
      experiment:
        type: object
        schema:
          $ref: "#/definitions/newThresholdExperiment"

  newThresholdExperiment:
    type: object
    required:
      - indicator
      - threshold
      - ticker
    properties:
      indicator:
        type: string
      threshold:
        type: integer
      ticker:
        type: string

  newCorrelationExperiment:
    type: object
    required:
      - asset_1
      - asset_2
    properties:
      asset_1:
        type: string
      asset_2:
        type: string

  existingCorrelationExperiment:
    type: object
    required:
      - experiment_id
      - asset_1
      - asset_2
      - correlation
    properties:
      experiment_id:
        type: string
      asset_1:
        type: string
      asset_2:
        type: string
      correlation:
        type: number

  existingThresholdExperiment:
    type: object
    properties:
      experiment_id:
        type: string
      indicator:
        type: string
      ticker:
        type: string

  getExperimentsResult:
    required:
      - experiments
    properties:
      correlations:
        type: array
        items:
          $ref: "#/definitions/existingCorrelationExperiment"
      thresholds:
        type: array
        items:
          $ref: "#/definitions/existingThresholdExperiment"
  
  ## Error response
  errorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Internal error"

  ## Not found response
  notFoundResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Not found"

  ## Not allowed response
  notAllowedResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Not allowed"

  ## Already exists response
  alreadyExistsResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Entity already exists"

  ## Bad input response
  badInputResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "Bad input"

  ## OK response
  okResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        default: "OK"

  ## OK response
  postOkResponse:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        maxLength: 36

paths:

  /v1/experiments/threshold:
    post:
      description: "Add a new experiment to a users account"
      operationId: "Experiments.Threshold.create"
      parameters:
        # - in: "header"
        #   name: "X_Request_ID"
        #   type: string
        #   format: uuid
        #   required: true
        #   description: "Request id"
        - in: "header"
          name: "idToken"
          type: string
          required: true
          description: "id token obtained from AWS Cognito"
        - in: "header"
          name: "user_id"
          type: string
          description: "the users ID to associate the experiment with"
          required: true
        - in: "body"
          name: "experiment"
          schema:
            $ref: "#/definitions/newThresholdPost"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        401:
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        500:
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"

  /v1/experiments/correlation:
    post:
      description: "Add a new experiment to a users account"
      operationId: "Experiments.Correlation.create"
      parameters:
        # - in: "header"
        #   name: "X_Request_ID"
        #   type: string
        #   format: uuid
        #   required: true
        #   description: "Request id"
        - in: "header"
          name: "idToken"
          type: string
          required: true
          description: "id token obtained from AWS Cognito"
        - in: "header"
          name: "user_id"
          type: string
          description: "the users ID to associate the experiment with"
          required: true
        - in: "body"
          name: "experiment"
          schema:
            $ref: "#/definitions/newCorrelationPost"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        401:
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        500:
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"

  /v1/users/experiments:
    get:
      description: "Get all experiments associated/owned by a user"
      operationId: "User.Experiments.getAll"
      parameters:
        # - in: "header"
        #   name: "X_Request_ID"
        #   type: string
        #   format: uuid
        #   required: true
        #   description: "Request id"
        - in: "header"
          name: "idToken"
          type: string
          required: true
          description: "access token obtained from AWS Cognito"
        - in: "header"
          name: "user_id"
          description: "the users ID to associate the experiment with"
          type: string
          required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/getExperimentsResult"
        401:
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        500:
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      description: "Delete a experiment from a users experiments list"
      operationId: "User.Experiments.delete"
      parameters:
        # - in: "header"
        #   name: "X_Request_ID"
        #   type: string
        #   format: uuid
        #   required: true
        #   description: "Request id"
        - in: "header"
          name: "idToken"
          type: string
          required: true
          description: "access token obtained from AWS Cognito"
        - in: "header"
          name: "experiment-id"
          type: string
          required: true
          description: "The database ID of the experiment"
        - in: "header"
          name: "user_id"
          type: string
          description: "the users ID to associate the experiment with"
          required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        401:
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        500:
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
