---
swagger: "2.0"
info:
  description: "A microservice for managing a users experiments"
  version: "0.1.0"
  title: "Experiments Service"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /v1/experiments/threshold:
    post:
      description: "Add a new experiment to a users account"
      operationId: "experiments_threshold_create"
      parameters:
      - name: "idToken"
        in: "header"
        description: "id token obtained from AWS Cognito"
        required: true
        type: "string"
      - name: "user_id"
        in: "header"
        description: "the users ID to associate the experiment with"
        required: true
        type: "string"
      - in: "body"
        name: "experiment"
        required: false
        schema:
          $ref: "#/definitions/newThresholdPost"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        "401":
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        "409":
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /v1/experiments/correlation:
    post:
      description: "Add a new experiment to a users account"
      operationId: "experiments_correlation_create"
      parameters:
      - name: "idToken"
        in: "header"
        description: "id token obtained from AWS Cognito"
        required: true
        type: "string"
      - name: "user_id"
        in: "header"
        description: "the users ID to associate the experiment with"
        required: true
        type: "string"
      - in: "body"
        name: "experiment"
        required: false
        schema:
          $ref: "#/definitions/newCorrelationPost"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        "401":
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        "409":
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /v1/users/experiments:
    get:
      description: "Get all experiments associated/owned by a user"
      operationId: "user_experiments_get_all"
      parameters:
      - name: "idToken"
        in: "header"
        description: "access token obtained from AWS Cognito"
        required: true
        type: "string"
      - name: "user_id"
        in: "header"
        description: "the users ID to associate the experiment with"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/getExperimentsResult"
        "401":
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        "409":
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete a experiment from a users experiments list"
      operationId: "user_experiments_delete"
      parameters:
      - name: "idToken"
        in: "header"
        description: "access token obtained from AWS Cognito"
        required: true
        type: "string"
      - name: "experiment_id"
        in: "header"
        description: "The database ID of the experiment"
        required: true
        type: "string"
      - name: "user_id"
        in: "header"
        description: "the users ID to associate the experiment with"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/okResponse"
        "401":
          description: "insufficient permissions/not allowed"
          schema:
            $ref: "#/definitions/notAllowedResponse"
        "409":
          description: "Already exists"
          schema:
            $ref: "#/definitions/alreadyExistsResponse"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/errorResponse"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  newCorrelationPost:
    required:
    - "experiment"
    properties:
      experiment:
        type: "object"
        properties: {}
  newThresholdPost:
    required:
    - "experiment"
    properties:
      experiment:
        type: "object"
        properties: {}
  newThresholdExperiment:
    type: "object"
    required:
    - "indicator"
    - "threshold"
    - "ticker"
    properties:
      indicator:
        type: "string"
      threshold:
        type: "integer"
      ticker:
        type: "string"
  newCorrelationExperiment:
    type: "object"
    required:
    - "asset_1"
    - "asset_2"
    properties:
      asset_1:
        type: "string"
      asset_2:
        type: "string"
  existingCorrelationExperiment:
    type: "object"
    required:
    - "asset_1"
    - "asset_2"
    - "correlation"
    - "experiment_id"
    properties:
      experiment_id:
        type: "string"
      asset_1:
        type: "string"
      asset_2:
        type: "string"
      correlation:
        type: "number"
      asset_1_deltas:
        type: "array"
        items:
          type: "number"
      asset_2_deltas:
        type: "array"
        items:
          type: "number"
    example:
      asset_1_deltas:
      - 6.02745618307040320615897144307382404804229736328125
      - 6.02745618307040320615897144307382404804229736328125
      correlation: 0.80082819046101150206595775671303272247314453125
      experiment_id: "experiment_id"
      asset_2_deltas:
      - 1.46581298050294517310021547018550336360931396484375
      - 1.46581298050294517310021547018550336360931396484375
      asset_2: "asset_2"
      asset_1: "asset_1"
  existingThresholdExperiment:
    type: "object"
    properties:
      experiment_id:
        type: "string"
      indicator:
        type: "string"
      ticker:
        type: "string"
      threshold:
        type: "string"
      event_dates:
        type: "array"
        items:
          type: "string"
      price_deltas:
        type: "array"
        items:
          type: "string"
      price_delta_std_dev:
        type: "number"
      price_delta_mean:
        type: "number"
      price_delta_mode:
        type: "number"
      t_test_p:
        type: "number"
      direction_bias:
        type: "string"
    example:
      indicator: "indicator"
      price_delta_mean: 5.63737665663332876420099637471139430999755859375
      t_test_p: 7.061401241503109105224211816675961017608642578125
      ticker: "ticker"
      price_deltas:
      - "price_deltas"
      - "price_deltas"
      price_delta_mode: 2.3021358869347654518833223846741020679473876953125
      event_dates:
      - "event_dates"
      - "event_dates"
      experiment_id: "experiment_id"
      direction_bias: "direction_bias"
      threshold: "threshold"
      price_delta_std_dev: 5.962133916683182377482808078639209270477294921875
  getExperimentsResult:
    properties:
      correlations:
        type: "array"
        items:
          $ref: "#/definitions/existingCorrelationExperiment"
      thresholds:
        type: "array"
        items:
          $ref: "#/definitions/existingThresholdExperiment"
    example:
      thresholds:
      - indicator: "indicator"
        price_delta_mean: 5.63737665663332876420099637471139430999755859375
        t_test_p: 7.061401241503109105224211816675961017608642578125
        ticker: "ticker"
        price_deltas:
        - "price_deltas"
        - "price_deltas"
        price_delta_mode: 2.3021358869347654518833223846741020679473876953125
        event_dates:
        - "event_dates"
        - "event_dates"
        experiment_id: "experiment_id"
        direction_bias: "direction_bias"
        threshold: "threshold"
        price_delta_std_dev: 5.962133916683182377482808078639209270477294921875
      - indicator: "indicator"
        price_delta_mean: 5.63737665663332876420099637471139430999755859375
        t_test_p: 7.061401241503109105224211816675961017608642578125
        ticker: "ticker"
        price_deltas:
        - "price_deltas"
        - "price_deltas"
        price_delta_mode: 2.3021358869347654518833223846741020679473876953125
        event_dates:
        - "event_dates"
        - "event_dates"
        experiment_id: "experiment_id"
        direction_bias: "direction_bias"
        threshold: "threshold"
        price_delta_std_dev: 5.962133916683182377482808078639209270477294921875
      correlations:
      - asset_1_deltas:
        - 6.02745618307040320615897144307382404804229736328125
        - 6.02745618307040320615897144307382404804229736328125
        correlation: 0.80082819046101150206595775671303272247314453125
        experiment_id: "experiment_id"
        asset_2_deltas:
        - 1.46581298050294517310021547018550336360931396484375
        - 1.46581298050294517310021547018550336360931396484375
        asset_2: "asset_2"
        asset_1: "asset_1"
      - asset_1_deltas:
        - 6.02745618307040320615897144307382404804229736328125
        - 6.02745618307040320615897144307382404804229736328125
        correlation: 0.80082819046101150206595775671303272247314453125
        experiment_id: "experiment_id"
        asset_2_deltas:
        - 1.46581298050294517310021547018550336360931396484375
        - 1.46581298050294517310021547018550336360931396484375
        asset_2: "asset_2"
        asset_1: "asset_1"
  errorResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "Internal error"
  notFoundResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "Not found"
  notAllowedResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "Not allowed"
  alreadyExistsResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "Entity already exists"
  badInputResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "Bad input"
  okResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        default: "OK"
    example:
      message: "OK"
  postOkResponse:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        maxLength: 36
